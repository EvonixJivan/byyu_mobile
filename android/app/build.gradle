
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

 def flutterRoot = localProperties.getProperty('flutter.sdk')
 if (flutterRoot == null) {
     throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
 }

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '4'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.3'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'

apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.firebase.crashlytics'


android {
    compileSdkVersion 34

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.byyu"
        minSdkVersion 23
        targetSdkVersion 35
        versionCode 30
        versionName "2.18"
        multiDexEnabled true
        dexOptions {
            preDexLibraries = false
        }
        lintOptions {
            checkReleaseBuilds false
            // Or, if you prefer, you can continue to check for errors in release builds,
            // but continue the build even when errors are found:
            abortOnError false
        }
    }

    buildTypes {
        // debug{
        //     signingConfig signingConfigs.debug
        //     applicationVariants.all { variant ->
        //         variant.outputs.all {
        //             def appName = "BYYU"
        //             def buildType = variant.variantData.variantConfiguration.buildType.name
        //             def newName
        //             newName = "${appname}_${new Date().format('yyMMdd_HH')}.apk"
        //             outputFileName = newName
        //         }
        //     }
        // }  
        debug{
            shrinkResources false
        } 
    //      applicationVariants.all { variant ->                              
    //     variant.outputs.each { output ->                              
    //         output.outputFileName = file("$project.buildDir/apk/byyu${new Date().format('yyMMdd_HH')}.apk")
    //     }                                                             
    // }
//         release {
// //            minifyEnabled true
//             shrinkResources false
// //            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//         }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    ndkVersion '22.0.6917172 rc1'

//    buildTypes {
//        release {
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig signingConfigs.debug
//        }
//    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation "androidx.multidex:multidex:2.0.1"
    implementation 'com.facebook.android:facebook-android-sdk:[8,9)'//latest.release'
    implementation 'com.google.android.play:integrity:1.0.1'    
    implementation 'com.facebook.android:facebook-android-sdk:16.2.0'
     // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:32.0.0')
    //
    // Add the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.20"


}
